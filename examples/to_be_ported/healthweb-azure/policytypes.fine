#light 

module PolicyTypes
open Prin
open DataModel

(* Authorization state *)
type role =
  | Patient:role
  | Doctor:role
  | Psychiatrist:role
  | Nurse:role
  | Pharmacist:role
  | InsuranceProvider:role
  | Unknown:role
      
type action =
  | CreateRecordAbout: prin -> action
  | Read:int -> action
  | Edit:int -> action
  | Annotate:int -> annot -> action
  | DeleteAnnotation: annotation -> action
  | Delete:int -> action
  | Search:action
  | ViewPatient:prin -> action
  | ConsentTo:prin -> action
  | Activate:role -> action
  | Deactivate:role -> action

type attribute =
  | CanBeInRole:prin -> role -> attribute
  | ActiveRole:prin -> role -> attribute
  | IsTreating:prin -> prin -> attribute

type authstate =
  | ANil:authstate
  | ACons:attribute -> authstate -> authstate

type permission = 
  | Permit:prin -> action -> permission

type GrantedIn :: permission => authstate => P

private type StateIs :: authstate => A = 
  | Sign : s:authstate -> StateIs s

(* Some commonly used type abbreviations *)
type state :: A = (s:authstate * StateIs s)
type permit (p:prin) (a:action) = s:authstate { GrantedIn (Permit p a) s}
type precord (p:prin) (s:authstate) = r:record { GrantedIn (Permit p (Read r.recid)) s}



