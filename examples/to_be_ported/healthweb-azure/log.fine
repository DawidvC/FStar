#light

module Log
open Prin
open DataModel
open PolicyTypes
open Util

val log_proofs_precs: p:prin -> s:authstate -> list (precord p s) -> list record
let rec log_proofs_precs p s = function 
  | Nil -> Nil
  | Cons r tl -> Cons (r:record) (log_proofs_precs p s tl)

val log_proofs_roles: p:prin -> s:authstate -> list (r:role { (In (CanBeInRole p r) s)}) -> list role
let rec log_proofs_roles p s = function 
  | Nil -> Nil
  | Cons r tl -> Cons (r:role) (log_proofs_roles p s tl)

val log_proofs_prin: p:prin -> s:authstate -> list (q:prin { (GrantedIn (Permit p (ViewPatient q)) s)}) -> list prin
let rec log_proofs_prin p s = function 
  | Nil -> Nil
  | Cons r tl -> Cons (r:prin) (log_proofs_prin p s tl)
